# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgis/postgis:10-2.5
        env:
          # must specify password for PG Docker container image, see: https://registry.hub.docker.com/_/postgres?tab=description&page=1&name=10
          POSTGRES_PASSWORD: password
          POSTGRES_DB: nmtrails
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
      env:
        DB_HOST: localhost
        DB_PASS: password
        DB_USER: postgres
        DB_PORT: 5432
        GOOGLE_API_KEY: NA
        GOOGLE_ENGINE_ID: NA
        JWT_SECRET: NA
        EMAIL_HOST: NA
        EMAIL_PORT: 0
        EMAIL_USER: NA
        EMAIL_PASSWORD: NA
    - name: Test
      run: mvn verify
      env:
        DB_HOST: localhost
        DB_PASS: password
        DB_USER: postgres
        DB_PORT: 5432
        GOOGLE_API_KEY: NA
        GOOGLE_ENGINE_ID: NA
        JWT_SECRET: NA
        EMAIL_HOST: NA
        EMAIL_PORT: 0
        EMAIL_USER: NA
        EMAIL_PASSWORD: NA

